<!--
 - Copyright (C) 2016 Vinicius Rogério Araujo Silva
 -
 - This file is part of RAMvader-DeadSpace.
 - 
 - RAMvader-DeadSpace is free software: you can redistribute it and/or modify
 - it under the terms of the GNU General Public License as published by
 - the Free Software Foundation, either version 3 of the License, or
 - (at your option) any later version.
 - 
 - RAMvader-DeadSpace is distributed in the hope that it will be useful,
 - but WITHOUT ANY WARRANTY; without even the implied warranty of
 - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 - GNU General Public License for more details.
 - 
 - You should have received a copy of the GNU General Public License
 - along with RAMvader-DeadSpace. If not, see <http://www.gnu.org/licenses/>.
 -->
<Window x:Class="TrainerApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TrainerApp"
		xmlns:props="clr-namespace:TrainerApp.Properties"
        mc:Ignorable="d"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="{x:Static props:Resources.strMainWindowTitle}" Height="350" Width="630"
		SizeToContent="Height"
		Icon="/media/icon.ico"
		Closing="WindowClosing">
	<Window.Resources>
		<!-- This style makes things visible only when the trainer is attached to the game. -->
		<Style x:Key="styleVisibleWhenAttached" TargetType="FrameworkElement">
			<Setter Property="Visibility" Value="Hidden" />
			<Style.Triggers>
				<DataTrigger Binding="{Binding Path=GameMemoryIO.Attached}" Value="True">
					<Setter Property="Visibility" Value="Visible" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>
    <StackPanel Orientation="Vertical" Margin="3">
		<GroupBox Header="{x:Static props:Resources.strGroupBoxHeaderGameInfo}" Margin="3">
			<Grid>
				<!-- Rows and columns definitions -->
				<Grid.RowDefinitions>
					<RowDefinition Height="auto" />
					<RowDefinition Height="auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Label Grid.Row="0" Grid.Column="0" Content="{x:Static props:Resources.strLblGamesProcessPrompt}" FontWeight="Bold" HorizontalAlignment="Right" Margin="3" />
				<DockPanel Grid.Row="0" Grid.Column="1" LastChildFill="False" VerticalAlignment="Center" MinWidth="170" Margin="3">
					<Label DockPanel.Dock="Left" Margin="0" Padding="0">
						<Label.Style>
							<Style TargetType="Label">
								<Setter Property="Content" Value="{x:Static props:Resources.strLblNotAttached}" />
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=GameMemoryIO.Attached}" Value="True">
										<Setter Property="Content" Value="{Binding Path=GameMemoryIO.TargetProcess.MainModule.ModuleName}" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Label.Style>
					</Label>
					<Label DockPanel.Dock="Left" Style="{StaticResource styleVisibleWhenAttached}" Content="(" Margin="0" Padding="3,0,0,0" />
					<Label DockPanel.Dock="Left" Style="{StaticResource styleVisibleWhenAttached}" Content="{x:Static props:Resources.strLblProcessIDPrompt}" Margin="0" Padding="0" />
					<Label DockPanel.Dock="Left" Style="{StaticResource styleVisibleWhenAttached}" Content="{Binding Path=GameMemoryIO.TargetProcess.Id,FallbackValue={x:Static props:Resources.strNoneTag}}" Margin="0" Padding="3,0,0,0" />
					<Label DockPanel.Dock="Left" Style="{StaticResource styleVisibleWhenAttached}" Content=")" Margin="0" Padding="0" />
				</DockPanel>


				<Label Grid.Row="1" Grid.Column="0" Content="{x:Static props:Resources.strLblRequiredGameVersionPrompt}" FontWeight="Bold" HorizontalAlignment="Right" Margin="3" />
				<Label Grid.Row="1" Grid.Column="1" Content="{x:Static props:Resources.strLblRequiredGameVersionValue}" HorizontalAlignment="Left" Margin="3" />
			</Grid>
		</GroupBox>
		<GroupBox Header="{x:Static props:Resources.strGroupBoxHeaderCheats}" Margin="3" Padding="3" FontWeight="Bold">
			<StackPanel Orientation="Vertical">
				<StackPanel.Resources>
					<Style TargetType="Label">
						<Setter Property="FontWeight" Value="Normal" />
						<Setter Property="FontStyle" Value="Italic" />
						<Setter Property="VerticalAlignment" Value="Center" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
						<Setter Property="Padding" Value="3,0,0,0" />
						<Setter Property="Margin" Value="0" />
					</Style>
					<Style TargetType="CheckBox">
						<Setter Property="FontWeight" Value="{x:Static FontWeights.Bold}" />
						<Setter Property="VerticalAlignment" Value="Center" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="Margin" Value="0" />
					</Style>
				</StackPanel.Resources>
				<StackPanel Orientation="Horizontal">
					<CheckBox Checked="CheckBoxCheatToggled" Unchecked="CheckBoxCheatToggled" Content="{x:Static props:Resources.strChkCheatPromptExample}" Tag="{x:Static local:ECheat.evCheatExample}" />
					<Label Content="{x:Static props:Resources.strChkCheatDescriptionExample}" Margin="3" />
				</StackPanel>
			</StackPanel>
		</GroupBox>
		<GroupBox Header="{x:Static props:Resources.strGroupBoxHeaderSupport}" Margin="3" FontWeight="Bold">
			<StackPanel Orientation="Horizontal">
				<Button Width="50" Height="50" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Padding="2" Margin="3,3,10,3" UseLayoutRounding="False" Click="ButtonClickDonate">
					<Button.Content>
						<Image Stretch="UniformToFill" Source="/media/donate.png" />
					</Button.Content>
				</Button>
				<StackPanel Orientation="Vertical" VerticalAlignment="Center">
					<Label Grid.Row="0" Grid.Column="1" Content="{x:Static props:Resources.strLblRequestForDonation}" VerticalContentAlignment="Bottom" VerticalAlignment="Bottom" Margin="0" Padding="0" />
					<Label Grid.Row="1" Grid.Column="1" FontStyle="Italic" Content="{x:Static props:Resources.strLblClickToDonate}" VerticalAlignment="Center"  Margin="0" Padding="0" FontWeight="Normal" />
				</StackPanel>
			</StackPanel>
		</GroupBox>
    </StackPanel>
</Window>
